version: 2.1

orbs:
  ruby: circleci/ruby@1.1.0
  # node: circleci/node@2

jobs:
  build:
    docker:
      - image: cimg/base:2020.01
    steps:
      - run:
          name: Login dockerhub
          command: docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
      - checkout
      - setup_remote_docker
      - run:
          name: Pull existing image
          command: docker pull $REPOSITORY_IMAGE:latest || true
      - run:
          name: Build image
          command: docker build --cache-from $REPOSITORY_IMAGE:latest -t $REPOSITORY_IMAGE:$CIRCLE_SHA1 -t $REPOSITORY_IMAGE:latest -f Dockerfile.ci .
      - run:
          name: Push image
          command: |
            docker push $REPOSITORY_IMAGE:$CIRCLE_SHA1
            docker push $REPOSITORY_IMAGE:latest
  test:
    docker:
      - image: cimg/base:2020.01
    steps:
      - run:
          name: Login Dockerhub
          command: docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
      - checkout
      - setup_remote_docker
      - run:
          name: Setup Database
          command: docker-compose -f docker-compose.ci.yml run app rails db:migrate:reset
      - run:
          name: Setup env variables
          command: |
            echo "CI=$CI" >> .env
            echo "CIRCLECI=$CIRCLECI" >> .env
            echo "CIRCLE_BUILD_NUM=$CIRCLE_BUILD_NUM" >> .env
            echo "CIRCLE_NODE_INDEX=$CIRCLE_NODE_INDEX" >> .env
            echo "CIRCLE_PROJECT_REPONAME=$CIRCLE_PROJECT_REPONAME" >> .env
            echo "CIRCLE_PROJECT_USERNAME=$CIRCLE_PROJECT_USERNAME" >> .env
            echo "CIRCLE_REPOSITORY_URL=$CIRCLE_REPOSITORY_URL" >> .env
            echo "CIRCLE_PR_NUMBER=$CIRCLE_PR_NUMBER" >> .env
            echo "CIRCLE_BRANCH=$CIRCLE_BRANCH" >> .env
            echo "CIRCLE_SHA1=$CIRCLE_SHA1" >> .env
      - run:
          name: Run Tests
          command: docker-compose -f docker-compose.ci.yml run --name app app rspec spec
      - run:
          name: Copy Artifacts
          command: docker cp app:/app/coverage .
      - store_artifacts:
          path: coverage

workflows:
  version: 2
  build_and_test:
    jobs:
      - build:
          context: dockerhub
      - test:
          context: dockerhub
          requires:
            - build
